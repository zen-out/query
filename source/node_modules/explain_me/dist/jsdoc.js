const fs = require("fs")
const ccc = require("clear_concise_creative")
const automate_me = require("automate_me")

function replaceJSDOCLink(moduleName, folder) {
    if (folder) {
        ccc.replaceJSON("./jsdoc.json", ["source"], {
            "include": [
                folder
            ],
            "includePattern": ".(jsx|js|ts|tsx)$",
            "excludePattern": "(node_modules/)"
        })
    }
    ccc.replaceJSON("./jsdoc.json", ["opts", "theme_opts", "menu"], [{
        "title": "see npm package",
        "link": `https://www.npmjs.com/package/${moduleName}`,
        "target": "_blank"
    }, {
        "title": "explore",
        "link": `https://zen-out.github.io/packages.html`,
        "target": "_blank"
    }])
    ccc.replaceJSON("./jsdoc.json", ["opts", "theme_opts", "codepen"], {
        "enable_for": [
            "examples"
        ],
        "options": {
            "js_external": `https://cdn.jsdelivr.net/npm/${moduleName}/index.js`,
        }
    })
}



/**
 * @example
 * html(moduleName, videoLink)
 * @description 
 * - Removes jsdoc.json file
 * - Replaces module and video link 
 * - Runs jsdoc
 * @author zen-out
 * @date 2022-03-08
 * @param {any} moduleName = undefined
 * @param {any}  video = undefined
 */
function html(moduleName, folder) {
    ccc.writeJSON("./jsdoc.json", "")
    let getJSDOC = ccc.readJSON("./node_modules/explain_me/jsdoc.json")
    ccc.writeJSON("./jsdoc.json", getJSDOC)
    replaceJSDOCLink(moduleName, folder)
    automate_me.runCommand(`rm -rf docs && ./node_modules/.bin/jsdoc --configure ./jsdoc.json -d docs --verbose`)
}


/**
 * @example
 * copyHTML("./docs/global.html", "../zen-out.github.io/modules/moduleName.html")
 * @author zen-out
 * @date 2022-03-22
 * @param {any} from
 * @param {any}  location
 * @returns {any}
 */
function copyHTML(from, location) {
    let copyDocs = ccc.readFile(from)
    ccc.writeFile(location, copyDocs)
    ccc.writeFile("../deploy/docs.html", copyDocs)
}
module.exports = { replaceJSDOCLink, html, copyHTML }